
services:
  eureka-server:
    image: netflix/eureka-server:latest
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      EUREKA_INSTANCE_HOSTNAME: eureka-server
    networks:
      - microservices-network

  gateway-service:
    image: springcloud/spring-cloud-gateway:latest
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/securitydb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - microservices-network

  admin-service:
    image: admin-service:latest
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/admindb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - microservices-network

  maintenance-service:
    image: maintenance-service:latest
    build:
      context: ./maintenance-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/maintenanceb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - microservices-network

  scooter-service:
    image: scooter-service:latest
    build:
      context: ./scooter-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/scooterdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - microservices-network

  user-service:
    image: user-service:latest
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/userdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - microservices-network

  report-service:
    image: report-service:latest
    build:
      context: ./report-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-service:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: report-service
    networks:
      - microservices-network


  trip-service:
    image: trip-service:latest
    build:
      context: ./trip-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - mongo
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root@mongo:27017/tripdb
    networks:
      - microservices-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yesdocker
      MYSQL_DATABASE: tpe
    networks:
      - microservices-network

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
